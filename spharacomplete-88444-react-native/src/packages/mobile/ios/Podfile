platform :ios, '12.0'
require_relative '../../../node_modules/react-native/scripts/react_native_pods'
require_relative '../../../node_modules/@react-native-community/cli-platform-ios/native_modules'
permissions_path = '../../../node_modules/react-native-permissions/ios'

target 'SpharaComplete' do
  config = use_native_modules!

  use_react_native!(:path => config[:reactNativePath])
  
  # Pods for SpharaComplete

  pod 'react-native-image-picker', :path => '../../../node_modules/react-native-image-picker/react-native-image-picker.podspec'
  # pod 'RNVolumeControl', :path => '../../../node_modules/react-native-volume-control/RNVolumeController.podspec'
  pod 'RNFastImage', :path => '../../../node_modules/react-native-fast-image/RNFastImage.podspec'
  pod 'BVLinearGradient', :path => '../../../node_modules/react-native-linear-gradient'
  pod 'FBSDKCoreKit'  
  pod 'FBSDKLoginKit'
  pod 'FBSDKShareKit'
  pod 'FBSDKPlacesKit'

  pod 'GoogleSignIn', '~> 5.0.2'
  # pod 'FirebaseCoreExtension', '~> 6.34.0'
#  pod 'Firebase/Core', '~> 5.19.0'
  pod 'Firebase/Analytics'
  pod 'SDWebImage','5.12.5'
  pod 'RNLocalize', :path => '../../../node_modules/react-native-localize/RNLocalize.podspec'
  # pod 'RCTSystemSetting', :path => '../../../node_modules/react-native-system-setting/RCTSystemSetting.podspec'
  pod 'RNPermissions', :path => '../../../node_modules/react-native-permissions'
  pod 'Permission-AppTrackingTransparency', :path => "#{permissions_path}/AppTrackingTransparency.podspec"
  # pod 'Permission-BluetoothPeripheral', :path => "#{permissions_path}/BluetoothPeripheral.podspec"
  pod 'Permission-Calendars', :path => "#{permissions_path}/Calendars.podspec"
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera.podspec"
  pod 'Permission-Contacts', :path => "#{permissions_path}/Contacts.podspec"
  pod 'Permission-FaceID', :path => "#{permissions_path}/FaceID.podspec"
  pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways.podspec"
  pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse.podspec"
  pod 'Permission-MediaLibrary', :path => "#{permissions_path}/MediaLibrary.podspec"
  pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone.podspec"
  pod 'Permission-Motion', :path => "#{permissions_path}/Motion.podspec"
  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
  pod 'Permission-Reminders', :path => "#{permissions_path}/Reminders.podspec"
  pod 'Permission-Siri', :path => "#{permissions_path}/Siri.podspec"
  pod 'Permission-SpeechRecognition', :path => "#{permissions_path}/SpeechRecognition.podspec"
  pod 'Permission-StoreKit', :path => "#{permissions_path}/StoreKit.podspec"

  # pod 'react-native-maps', :path => '../../../node_modules/react-native-maps/react-native-maps.podspec'
  pod 'react-native-google-maps', :path => '../../../node_modules/react-native-maps/react-native-google-maps.podspec'
  pod 'GoogleMaps'  # Uncomment this line if you want to support GoogleMaps on iOS
  pod 'Google-Maps-iOS-Utils' # Uncomment this line if you want to support GoogleMaps on iOS
  pod 'RNImageCropPicker', :path => '../../../node_modules/react-native-image-crop-picker'

  pod 'RNCCheckbox', :path => '../../../node_modules/@react-native-community/checkbox'

  pod 'react-native-slider', :path => '../../../node_modules/@react-native-community/slider'

  pod 'react-native-webview', :path => '../../../node_modules/react-native-webview'

  pod 'RNGestureHandler', :path => '../../../node_modules/react-native-gesture-handler'
  
  pod 'react-native-geolocation-service', path: '../../../node_modules/react-native-geolocation-service'

  pod 'react-native-safe-area-context', :path => '../../../node_modules/react-native-safe-area-context'

  pod 'RNSVG', :path => '../../../node_modules/react-native-svg'

  pod 'RNShare', :path => '../../../node_modules/react-native-share'

  pod 'react-native-webrtc', :path => '../../../node_modules/react-native-webrtc'

  pod 'RNFS', :path => '../../../node_modules/react-native-fs'

  pod 'Protobuf', '= 3.22.1'
  target 'SpharaCompleteTests' do
    inherit! :search_paths
    # Pods for testing
  end

  use_native_modules!
end

target 'SpharaComplete-tvOS' do
  # Pods for SpharaComplete-tvOS

  target 'SpharaComplete-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end

end

post_install do |installer|
  ## Fix for XCode 12.5
  find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
  "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
  find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
  "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")
  find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
  "RCTBridgeModuleNameForClass(strongModule))", "RCTBridgeModuleNameForClass(Class(strongModule)))")
  find_and_replace("../../../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
  "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
  find_and_replace("../../../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
  "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")
  find_and_replace("../../../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
  "RCTBridgeModuleNameForClass(strongModule))", "RCTBridgeModuleNameForClass(Class(strongModule)))")
  find_and_replace("../../../node_modules/react-native/Libraries/Image/RCTUIImageViewAnimated.m",
  "_currentFrame.CGImage;","_currentFrame.CGImage ;} else { [super displayLayer:layer];")
  installer.pods_project.build_configurations.each do |config|
    config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
  end
end

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
      text = File.read(name)
      replace = text.gsub(findstr,replacestr)
      if text != replace
          puts "Fix: " + name
          File.open(name, "w") { |file| file.puts replace }
          STDOUT.flush
      end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end
